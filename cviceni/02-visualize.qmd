---
title: "Cviceni 2: Visualize"
editor: visual
---

```{r setup}
require(tidyverse)
```

## Uloha 1

Opiste a spustte kod z prezentace pro vytvoreni grafu. Venujte specialni pozornost hlaskovani, velkym / malym pismenum a zavorkam.

```{r load-data}
#| echo: false

```

```{r}

```

## Uloha 2

Zmente barvu (color), velikost (size), pruhlednost (alpha) a tvar (shape) bodu v grafu podle dat. Experimentujte.

```{r}
ggplot(data = mpg) +
  geom_point(mapping = aes(x = ifelse(manufacturer == "audi", displ + 100, displ), y = hwy, color = cyl))

```

## Uloha 3

Jaky je rozdil mezi funkci `facet_grid` a `facet_wrap`?

Pomoci `ctrl + shift + c` zakomentujete a odkomentujete jednotlive radky kodu.

```{r}
p <- ggplot(data = mpg) +
  geom_point(mapping = aes(x = displ, y = hwy))

p
# p + facet_grid(. ~ cyl)
# p + facet_grid(drv ~ .)
# p + facet_grid(drv ~ cyl)
# p + facet_wrap(~ class)
# p + facet_wrap(~ class, ncol = 2)
```

## Uloha 4

Pridejte popisky (`labs`) do grafu.

-   nadpis: Spotreba paliva podle velikosti motoru
-   podnadpis: Data rozdelena podle tridy vozidla
-   osa x: Velikost motoru (litry)
-   osa y: Spotreba (mpg)
-   barva: Trida vozidla
-   popisek: Zdroj - https://fueleconomy.gov/

```{r}
#| fig-cap: SOme text

ggplot(data = mpg) +
  geom_point(mapping = aes(x = displ, y = hwy, color = class)) +
  labs(
    title = "Fuel Efficiency by Engine Size",
    subtitle = "Data facetted by class",
    x = "Engine Size (displacement in liters)",
    y = "Fuel Efficiency (MPG)",
    color = "Class of\nAutomobile",
    caption = "Data from the EPA"
  )

```

## Uloha 5

Vytvorte sloupcovy graf (bar chart) znazornujici pocet vozidel v jednotlivych tridach. Pro kazdou tridu pouzijte jinou barvu.

Napoveda:

-   Nepouzivejte mapovani pro y (dopocita se automaticky)
-   Barva (color) a vypln (fill) u sloupcoveho grafu znamenaji ruzne veci

```{r}
ggplot(data = mpg) +
  geom_bar(mapping = aes(x = class, colour = class), alpha = 1, width = 0.7, size = 3, fill="darkGray") +
  theme_minimal() +
  theme(text = element_text(family = "Serif"))

```

```{r}
p <- ggplot(data = mpg, ) +
  geom_jitter(mapping = aes(x = class, y = hwy), width = 0.05, alpha = 0.2) +
  geom_violin(mapping = aes(x = class, y = hwy), alpha = 0.1)
```

## Uloha 6

Nasludujici grafy nejdou vytvorit kvuli jedne ci vice chybam. Chyby identifikujte a opravte. Ctete pozorne chybovou hlasku v konzoli.

### Uloha 6.a

```{r}
ggplot(mapping = aes(year, hwy), data = mpg) +
  geom_point()
```

```{r}
ggplot(mpg) +
  geom_point(aes(year, hwy))
```

### Uloha 6.b

```{r}
ggplot(mpg, aes(displ, hwy)) +
  geom_point()
```

### Uloha 6.c

```{r}
ggplot(mpg, aes(manufacturer)) +
  geom_bar() +
  labs(title = "Count models per manufacturer")
```

```{r}
ggplot(mpg, aes(manufacturer)) +
  geom_bar() +
  labs(title = "Count models per manufacturer")
```

### Uloha 6.d

```{r}
ggplot(mpg) +
  aes(year, hwy, col = factor(year)) +
  geom_jitter() +
  scale_x_continuous(
    breaks = c(1999, 2008), minor_breaks = 1990:2010,
    labels = c("first", "second")
    )
```

## Uloha 7

Nactete knihovnu `gapminder` (nainstalujte, pokud bude potreba) a zjistete, co obsahuje datova sada. Popiste sousedovi, jaka data obsahuji jednotlive sloupecky. Muzete pouzit pripraveny kod nize.

```{r}
# install.packages("gapminder")
require(gapminder)
```

```{r}
gapminder
```

```{r}
summary(gapminder)
```

```{r}
?gapminder
```

### Uloha 7.a

Nakreslete graf vyvoje ocekavaneho doziti pro jednotlive zeme. Pouzijte rok (year) na ose x, ocekavany vek doziti (lifeExp) na ose y a zemi (country) pro barvu. Hodi se zde vice bodovy nebo spojnicovy graf?

Je takovy graf prehledny / pouzitelny? Vymyslete, jak by se dal upravit, aby byl prehlednejsi.

```{r}

ggplot(gapminder, aes(year, lifeExp, color = country)) +
  geom_line(show.legend = FALSE)
```

```{r}
gapminder %>%
  group_by(year, continent) %>%
  summarise(lifeExp = mean(lifeExp)) %>%
  ggplot(aes(year, lifeExp, color = continent)) +
  geom_line() +
  expand_limits(y = 0)
```

### Uloha 7.b

Nakreslete bodovy graf zavislosti ocekavaneho veku doziti na hrubem domacim produktu na osobu. Vyznacte jednotlive kontinenty barevne a prolozte regresni primkou (dohromady pro vsechny zeme / kontinenty).

Je takovy graf prehledny / pouzitelny? Vymyslete, jak by se dal upravit, aby byl prehlednejsi.

```{r}
ggplot(gapminder, aes(gdpPercap, lifeExp)) +
  geom_point(aes(color = continent), alpha = .3) +
  geom_smooth(
    aes(color=factor(year)),
    method = "lm", formula = y ~ a + b * log(x), se = F,
  ) +
  expand_limits(y = c(0, 100)) +
  scale_x_log10()
```

## Uloha 8

Podivejte se na dataset `PlantGrowth`, co obsahuje za data.

Vyzkousejte ruzne varianty grafu s pouzitim obou sloupcu z tabulky.

```{r}
ggplot(PlantGrowth, aes(group, weight)) +
  geom________()
```

## Uloha 9

Pridejte popisky os a nazev grafu, zmente styl (tema) grafu na jine.

Vsimnete si, ze je mozne do volby sloupce pridat i nejaky vzorec pro vypocet. Podivejte se take, jak by vypadal popisek osy, kdybychom ho neprepsali vlastnim textem.

Dokazete odhadnout, co dela funkce `expand_limits`? Svoji domnenku si overte v napovede pomoci `?expand_limits`.

```{r}
__________(mpg, aes(displ, 235.21 / hwy)) +
  geom_point() +
  labs(_______ = "Zavislost spotreby na objemu motoru",
       _______ = "S vetsim motorem roste spotreba paliva",
       _______ = "Spotreba na dalnici [l/100km]",
       _______ = "Objem motoru [litry]") +
  theme___________() +
  expand_limits(x = 0, y = 0)
```
